# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Abilities {
  _id: ObjectId!
  knowledges: [String!]!
  skills: [String!]!
}

type Auth {
  _id: ObjectId!
  token: String!
}

input CreateUserInput {
  email: String!
  fullname: String!
  password: String!
}

input EditUserInput {
  address: String
  age: String
  blog: [NewsInput!]
  cv: String
  description: String
  email: String
  facebook: String
  facts: [FactInput!]
  form: Boolean
  fullname: String
  github: String
  googleIframe: String
  img: String
  linkedin: String
  password: String
  personalPath: [PersonalPathInput!]
  phone: String
  position: String
  residence: String
  twitter: String
}

type Fact {
  _id: String!
  name: String!
  value: Float
}

input FactInput {
  _id: String!
  name: String!
  value: Float!
}

type Mutation {
  createNews(data: NewsInput!): News!
  createPortfolio(data: PortfolioInput!): Portfolio!
  createUser(data: CreateUserInput!): User!
  deleteNews(_id: String!): News!
  deletePortfolio(_id: String!): Portfolio!
  deleteUser(_id: String!): User!
  editUser(_id: String!, data: EditUserInput!): User!
  login(email: String!, password: String!): String!
  logout: Auth!
}

type News {
  _id: ObjectId!
  category: String!
  createdBy: String!
  date: String!
  description: String!
  image: String!
  keywords: [String!]!
  title: String!
}

input NewsInput {
  category: String!
  description: String!
  image: String!
  keywords: [String!]!
  title: String!
}

"""Mongo object id scalar type"""
scalar ObjectId

type PersonalPath {
  _id: String!
  headline: String
  pieces: [Piece!]!
}

input PersonalPathInput {
  _id: String!
  headline: String!
  pieces: [PieceInput!]!
}

type Piece {
  description: String
  location: String
  type: String
  year: String
}

input PieceInput {
  description: String!
  location: String!
  type: String!
  year: String!
}

type Portfolio {
  _id: ObjectId!
  category: String!
  createdBy: String!
  image: String!
  link: String!
  name: String!
}

input PortfolioInput {
  category: String!
  link: String!
  name: String!
}

type Query {
  currentUser: User!
  news(_id: String!): News!
  newses: [News!]!
  portfolio(_id: String!): Portfolio!
  portfolios: [Portfolio!]!
  user(_id: String!): User!
  users: [User!]!
}

type User {
  _id: ObjectId!
  abilities: [Abilities!]
  address: String
  age: String
  cv: String
  description: String
  email: String!
  facebook: String
  facts: [Fact!]
  form: Boolean
  fullname: String!
  github: String
  googleIframe: String
  img: String
  linkedin: String
  password: String!
  personalPath: [PersonalPath!]
  phone: String
  position: String
  residence: String
  roles: [String!]
  twitter: String
}
